-- SanVim Installation Script
-- Run this in Neovim to automatically set up SanVim

local function install_sanvim()
    print("üéÆ Installing SanVim...")
    
    -- Check if we're in the right directory
    local current_dir = vim.fn.getcwd()
    if not vim.fn.isdirectory(current_dir .. "/assets") then
        print("‚ùå Error: Please run this script from the SanVim plugin directory")
        return
    end
    
    -- Check if assets contain the sound file
    local sound_file = current_dir .. "/assets/gta-cheat-sound.mp3"
    if vim.fn.filereadable(sound_file) == 0 then
        print("‚ùå Error: Sound file not found in assets directory")
        return
    end
    
    print("‚úÖ Sound file found: " .. sound_file)
    
    -- Get user's Neovim config directory
    local config_dir
    if vim.fn.has("win32") == 1 then
        config_dir = vim.fn.expand("~/AppData/Local/nvim")
    else
        config_dir = vim.fn.expand("~/.config/nvim")
    end
    
    -- Create config directory if it doesn't exist
    if vim.fn.isdirectory(config_dir) == 0 then
        vim.fn.mkdir(config_dir, "p")
        print("‚úÖ Created config directory: " .. config_dir)
    end
    
    -- Create plugins directory
    local plugins_dir = config_dir .. "/lua/plugins"
    if vim.fn.isdirectory(plugins_dir) == 0 then
        vim.fn.mkdir(plugins_dir, "p")
        print("‚úÖ Created plugins directory: " .. plugins_dir)
    end
    
    -- Create SanVim config file
    local sanvim_config = plugins_dir .. "/sanvim.lua"
    local config_content = [[
-- SanVim Configuration
-- Automatically generated by install script

return {
    {
        "]] .. current_dir:gsub("\\", "/") .. [[",
        name = "sanvim",
        event = "VeryLazy",
        config = function()
            require("sanvim").setup({
                enabled = true,
                min_word_length = 5,
                -- Customize these options as needed
                cheat_messages = {
                    "HEALTH RESTORED",
                    "WEAPONS GIVEN", 
                    "VEHICLE SPAWNED",
                    "WANTED LEVEL CLEARED",
                    "INFINITE AMMO",
                    "GOD MODE ACTIVATED",
                    "SUPER JUMP ENABLED",
                    "INVINCIBILITY ON",
                    "SPEED BOOST",
                    "FLYING CARS",
                }
            })
        end,
        keys = {
            { "<leader>st", "<cmd>SanVimToggle<cr>", desc = "Toggle SanVim" },
            { "<leader>sc", "<cmd>SanVimCount<cr>", desc = "Show cheat count" },
            { "<leader>sr", "<cmd>SanVimReset<cr>", desc = "Reset cheat count" },
        },
    }
}
]]
    
    -- Write config file
    local file = io.open(sanvim_config, "w")
    if file then
        file:write(config_content)
        file:close()
        print("‚úÖ Created SanVim config: " .. sanvim_config)
    else
        print("‚ùå Error: Could not create config file")
        return
    end
    
    -- Create basic init.lua if it doesn't exist
    local init_file = config_dir .. "/init.lua"
    if vim.fn.filereadable(init_file) == 0 then
        local init_content = [[
-- Neovim Configuration
-- Basic setup for SanVim

-- Bootstrap lazy.nvim if not installed
local lazypath = vim.fn.stdpath("data") .. "/lazy/lazy.nvim"
if not vim.loop.fs_stat(lazypath) then
    vim.fn.system({
        "git",
        "clone",
        "--filter=blob:none",
        "https://github.com/folke/lazy.nvim.git",
        "--branch=stable",
        lazypath,
    })
end
vim.opt.rtp:prepend(lazypath)

-- Load plugins
require("lazy").setup("plugins")
]]
        
        local init = io.open(init_file, "w")
        if init then
            init:write(init_content)
            init:close()
            print("‚úÖ Created init.lua: " .. init_file)
        end
    end
    
    print("")
    print("üéâ SanVim installation complete!")
    print("")
    print("üìã Next steps:")
    print("1. Restart Neovim")
    print("2. Type any 5+ letter word to test the plugin")
    print("3. Use :SanVimToggle to turn it on/off")
    print("4. Use :SanVimCount to see your cheat count")
    print("")
    print("üîß Configuration file: " .. sanvim_config)
    print("üìñ For more options, see: " .. current_dir .. "/example-config.lua")
end

-- Run installation
install_sanvim() 